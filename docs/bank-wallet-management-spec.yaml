openapi: 3.0.0
info:
  title: digital bank wallet management API
  description: This is an api about a digital bank management.
  version: 1.2.2
tags:
  - name: account
    description: Everything about account
  - name: transfer
    description: all about transfer
  - name: loan
    description: about loans
  - name: transaction
    description: about account transactions
  - name: provisioning
    description: account's provisioning
paths:
  /accounts:
    get:
      tags:
        - account
      summary: get all accounts
      description: The returned accounts are ordered by creation date
      operationId: getAccounts
      responses:
        200: 
          $ref: "#/components/responses/200"
          description: return an array of accounts
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: "#/components/schemas/Account"
        400: 
          $ref: "#/components/responses/400"
        404: 
          $ref: "#/components/responses/404"
        500: 
          $ref: "#/components/responses/500"
  /account/{accountId}: 
    get: 
      tags:
        - account 
      summary: get account by its id 
      operationId: getAccountById
      parameters: 
        - $ref: "#/components/parameters/PathAccountId"    
      responses:
        200: 
          $ref: "#/components/responses/200"
          description: return an account
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
        400: 
          $ref: "#/components/responses/400"
        404: 
          $ref: "#/components/responses/404"
        500: 
          $ref: "#/components/responses/500"
    put: 
      tags:
        - account
      summary: Create or update an account
      operationdId: crupdateAccountById
      parameters:
        - $ref: "#/components/parameters/PathAccountId"
      requestBody: 
        required: true 
        content:
          application/json:
            schema: 
              $ref: "#/components/schemas/CrupdateAccount"
      responses:
        200: 
          $ref: "#/components/responses/200"
          description: return the created or the updated account
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
        400: 
          $ref: "#/components/responses/400"
        404: 
          $ref: "#/components/responses/404"
        500: 
          $ref: "#/components/responses/500"
  /balance/account/{accountId}: 
    get: 
      tags:
        - balance
      summary: Get the last Balance of the account
      operationId: getBalanceByAccountId
      parameters:
        - $ref: "#/components/parameters/PathAccountId"
      responses:
        200: 
          $ref: "#/components/responses/200"
          description: return the last balance of the account
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Balance"
        400: 
          $ref: "#/components/responses/400"
        404: 
          $ref: "#/components/responses/404"
        500: 
          $ref: "#/components/responses/500"
    put:
      tags:
        - balance
      summary: Update or create the balance of an account
      operationId: crupdateBalanceByAccountId
      parameters:
        - $ref: "#/components/parameters/PathAccountId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CrupdateBalance"
      responses:
        200:
          $ref: "#/components/responses/200"
          description: return the created or updated balance with the account
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Balance"
        400:
          $ref: "#/components/responses/400"
        404:
          $ref: "#/components/responses/404"
        500:
          $ref: "#/components/responses/500"
  /balance/loan/{accountId}:
    get: 
      tags:
        - loan 
      summary: List of the account, the loan amount,the loan interest and the loan evolution filtered by the first 7 days' interest and from the 8th day's interest
      operationId: getLoanByAccountId
      parameters:
        - $ref: "#/components/parameters/PathAccountId"
      responses:
        200: 
          $ref: "#/components/responses/200"
          description: return an array of loans with the linked account
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BankLoan"
        400: 
          $ref: "#/components/responses/400"
        404: 
          $ref: "#/components/responses/404"
        500: 
          $ref: "#/components/responses/500"
  /transaction/account/{accountId}:
    get: 
      tags:
        - transaction
      operationId: getTransactionByAccountId
      summary: List of all the transactions permformed by the account from the recent one to the older one
      parameters:
        - $ref: "#/components/parameters/PathAccountId"
      responses:
        200: 
          $ref: "#/components/responses/200"
          description: return the list of the account's transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transactions"
        400: 
          $ref: "#/components/responses/400"
        404: 
          $ref: "#/components/responses/404"
        500: 
          $ref: "#/components/responses/500"
  /transfer/account/{accountId}:
    get: 
      tags:
        - transfer 
      summary: List of all the transfers of an account
      operationId: getTransaferByAccountId
      description: List of the sender account's transfers
      parameters:
        - $ref: "#/components/parameters/PathAccountId"
      responses:
        200: 
          $ref: "#/components/responses/200"
          description: return a list of the sender's account's transfers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transfer"
        400: 
          $ref: "#/components/responses/400"
        404: 
          $ref: "#/components/responses/404"
        500:
          $ref: "#/components/responses/500"
  /provisioning/account/{accountId}:
    get:
      tags:
        - provisioning
      summary: List of all the provisionings of the account
      operationId: getProvisioningByAccountId
      parameters:
        - $ref: "#/components/parameters/PathAccountId"
      responses:
        200:
          $ref: "#/components/responses/200"
          description: return a list of all the account's provisionings filtered from the recent one to the older one
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Provisioning"
        400:
          $ref: "#/components/responses/400"
        404:
          $ref: "#/components/responses/404"
        500:
          $ref: "#/components/responses/500"
components:
  schemas:
    CrupdateAccount: 
      type: object
      properties:
        firstName:
          description: the account's owner first_name
          type: string
        lastName:
          description: the account's owner last name
          type: string
        birthdate:
          description: the account owner should have at least 21 years old
          type: string
          format: date
        monthlyPay:
          type: number
          format: float
    Account:
      allOf:
        - $ref: "#/components/schemas/CrupdateAccount" 
      properties:
        id:
          description: auto-generated
          type: string
        accountRef:
          description: the account's number is unique
          type: string
    CrupdateBalance: 
      type: object
      properties:
        amount:
          type: number
          format: float
        dateTime:
          type: string
          format: date-time
    Balance:
      allOf:
        - $ref: "#/components/schemas/CrupdateBalance"
        - type: object
          properties:
            id:
              type: string
            account:
              $ref: "#/components/schemas/Account"
    Transfer:
      description: There is no negative balance or bank loan for the transfer
      type: object
      properties:
        id:
          type: string
          description: auto-generated
        amount:
          type: number
          format: float
        reason:
          description: the reason of the transfer
          type: string
        dateTime:
          type: string
          format: date-time
        effectiveDate:
          type: string
          format: date-time
        recordDate:
          type: string
          format: date-time
        transferRef:
          type: string
        accountReceiver:
          description: the destination of the transfer
          $ref: "#/components/schemas/Account"
        accountSender:
          description: the sender's account is different from the receiver's account
          $ref: "#/components/schemas/Account"
    LoanEvolution:
      description: when the account's owner pay the loan
      type: object
      properties:
        id:
          type: string
        dateTime:
          type: string
          format: date-time
        totalInterest:
          type: number
          format: float
        rest:
          type: number
          format: float
    BankLoan:
      description: loan accorded by the bank for each account
      type: object
      properties:
        id:
          type: string
        amount:
          type: number
          format: float
        loanDate:
          type: string
          format: date
        interest:
          description: according each account
          type: number
          format: float
        account:
          $ref: "#/components/schemas/Account"
        loanEvolution:
          $ref: "#/components/schemas/LoanEvolution"
    Transaction:
      type: object
      properties:
        id:
          type: string
        amount:
          type: number
          format: float
        type:
          description: type of the transaction (debit or credit)
          type: string
          enum:
            - debit
            - credit
        dateTime:
          type: string
          format: date-time
        account:
          $ref: "#/components/schemas/Account"
    Provisioning:
      type: object
      properties:
        id:
          type: string
        amount:
          type: number
          format: float
        reason:
          type: string
        effectiveDate:
          type: string
          format: date
        recordDate:
          type: string
          format: date
        account:
          type: object
          properties:
            $ref: "#/components/schemas/Account"
    defaultResponse:
      type: object
      properties:
        status:
          type: object
          properties:
            code:
              type: integer
            message:
              type: string
        body:
          type: object
  parameters:
    PathAccountId: 
      in: path
      name: accountId
      description: id in path 
      required: true
      schema: 
        type: string 
  responses:
    "200":
      description: HTTP 200 (ok)
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/defaultResponse"
          example:
            status:
              code: 200
              message: OK
    "400":
      description: HTTP 400 (Bad request)
      content:
        application/json:
          schema: 
            $ref: "#/components/schemas/defaultResponse"
          example:
            status:
              code: 400
              message: Bad request 
    "404":
      description: HTTP 404 (not found)
      content:
        application/json:
          schema: 
            $ref: "#/components/schemas/defaultResponse"
          example:
            status:
              code: 404
              message: Not found
    "500":
      description: HTTP 500 (internal server error)
      content:
        application/json:
          schema: 
            $ref: "#/components/schemas/defaultResponse"
          example:
            status:
              code: 500
              message: Internal server error  
